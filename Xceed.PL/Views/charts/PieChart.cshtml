@model List<EmployeeVM>

@{
    ViewData["Title"] = "Employee Distribution by Account";
}

<h2>@ViewData["Title"]</h2>

    <canvas id="accountPieChart" width="400" height="200"></canvas>

    <script src="~/Layout/plugins/chartjs/Chart.min.js"></script>

    <script>
        var employeeData = @Html.Raw(Json.Serialize(Model));

        var accountCounts = {};
        var totalEmployees = employeeData.length;

        employeeData.forEach(function (employee) {
            if (!accountCounts[employee.account]) {
                accountCounts[employee.account] = 0;
            }
            accountCounts[employee.account]++;
        });

        var ctx = document.getElementById('accountPieChart').getContext('2d');
        var chart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(accountCounts),
                datasets: [{
                    data: Object.values(accountCounts),
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                        // Add more colors as needed
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                        // Add more colors as needed
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var accountName = data.labels[tooltipItem.index];
                            var accountCount = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];
                            var percentage = ((accountCount / totalEmployees) * 100).toFixed(2);
                            return accountName + ': ' + percentage + '%';
                        }
                    }
                }
            }
        });
    </script>







